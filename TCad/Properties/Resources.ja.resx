<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="dialog_title_drawing_settings" xml:space="preserve">
    <value>図面の設定</value>
  </data>
  <data name="error_operation_failed" xml:space="preserve">
    <value>失敗しました</value>
  </data>
  <data name="error_select_2_or_more" xml:space="preserve">
    <value>2個以上のオブジェクトを選択してください</value>
  </data>
  <data name="error_select_2_points" xml:space="preserve">
    <value>Pointを2個選択してください</value>
  </data>
  <data name="menu_change_fig_name" xml:space="preserve">
    <value>図形の名前を変更</value>
  </data>
  <data name="menu_continue_create_figure" xml:space="preserve">
    <value>図形の作成を継続する</value>
  </data>
  <data name="menu_copy" xml:space="preserve">
    <value>コピー</value>
  </data>
  <data name="menu_doc_settings" xml:space="preserve">
    <value>図面の設定...</value>
  </data>
  <data name="menu_draw" xml:space="preserve">
    <value>描画</value>
  </data>
  <data name="menu_draw_mesh_outline" xml:space="preserve">
    <value>Meshのアウトラインを描画</value>
  </data>
  <data name="menu_draw_mode" xml:space="preserve">
    <value>描画モード</value>
  </data>
  <data name="menu_edit" xml:space="preserve">
    <value>編集</value>
  </data>
  <data name="menu_end_create" xml:space="preserve">
    <value>作成終了</value>
  </data>
  <data name="menu_file" xml:space="preserve">
    <value>ファイル</value>
  </data>
  <data name="menu_fill_mesh" xml:space="preserve">
    <value>Meshを塗りつぶす</value>
  </data>
  <data name="menu_grid_settings" xml:space="preserve">
    <value>グリッド設定...</value>
  </data>
  <data name="menu_insert_point" xml:space="preserve">
    <value>点の挿入</value>
  </data>
  <data name="menu_load" xml:space="preserve">
    <value>読み込み</value>
  </data>
  <data name="menu_new_doc" xml:space="preserve">
    <value>新規作成</value>
  </data>
  <data name="menu_page_settings" xml:space="preserve">
    <value>ページ設定...</value>
  </data>
  <data name="menu_paste" xml:space="preserve">
    <value>貼り付け</value>
  </data>
  <data name="menu_print" xml:space="preserve">
    <value>印刷</value>
  </data>
  <data name="menu_quite_create" xml:space="preserve">
    <value>中止</value>
  </data>
  <data name="menu_save" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="menu_save_as" xml:space="preserve">
    <value>名前を付けて保存...</value>
  </data>
  <data name="menu_script" xml:space="preserve">
    <value>スクリプト</value>
  </data>
  <data name="menu_show_script_editor" xml:space="preserve">
    <value>スクリプトエディタを表示</value>
  </data>
  <data name="menu_snap" xml:space="preserve">
    <value>スナップ</value>
  </data>
  <data name="menu_snap_settings" xml:space="preserve">
    <value>スナップ設定...</value>
  </data>
  <data name="menu_snap_to_grid" xml:space="preserve">
    <value>グリッドにスナップ</value>
  </data>
  <data name="menu_snap_to_last_down" xml:space="preserve">
    <value>ラストダウンポイントにスナップ</value>
  </data>
  <data name="menu_snap_to_line" xml:space="preserve">
    <value>延長線にスナップ</value>
  </data>
  <data name="menu_snap_to_point" xml:space="preserve">
    <value>ポイントにスナップ</value>
  </data>
  <data name="menu_snap_to_seg" xml:space="preserve">
    <value>線分にスナップ</value>
  </data>
  <data name="menu_snap_to_self" xml:space="preserve">
    <value>シャドウにスナップ</value>
  </data>
  <data name="menu_snap_to_zero" xml:space="preserve">
    <value>原点にスナップ</value>
  </data>
  <data name="menu_sttings" xml:space="preserve">
    <value>設定</value>
  </data>
  <data name="menu_to_loop" xml:space="preserve">
    <value>ループ</value>
  </data>
  <data name="notice_operation_success" xml:space="preserve">
    <value>操作は成功しました</value>
  </data>
  <data name="notice_was_grouped" xml:space="preserve">
    <value>グループ化されました</value>
  </data>
  <data name="notice_was_ungrouped" xml:space="preserve">
    <value>グループが解除されました</value>
  </data>
  <data name="string_angle" xml:space="preserve">
    <value>角度</value>
  </data>
  <data name="string_degree" xml:space="preserve">
    <value>度</value>
  </data>
  <data name="string_input_fig_name" xml:space="preserve">
    <value>図形の名前を入力してください</value>
  </data>
  <data name="string_magnification_rate" xml:space="preserve">
    <value>拡大率</value>
  </data>
</root>