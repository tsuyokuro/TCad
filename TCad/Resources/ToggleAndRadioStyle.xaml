<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Colors.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style
        x:Key="ToolToggleButton"
        BasedOn="{StaticResource {x:Type ToggleButton}}"
        TargetType="{x:Type ToggleButton}">

        <Setter Property="Foreground" Value="White"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        Name="CustomBorder"
                        Background="{StaticResource ButtonColor}"
                        BorderBrush="{StaticResource ButtonColor}"
                        BorderThickness="0"
                        CornerRadius="4">

                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CustomBorder" Property="BorderBrush" Value="{StaticResource ToggleButtonCheckedBGColor}" />
                            <Setter TargetName="CustomBorder" Property="Background" Value="{StaticResource ToggleButtonCheckedBGColor}" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="CustomBorder" Property="BorderBrush" Value="{StaticResource ToggleButtonMouseOverBGColor}" />
                            <Setter TargetName="CustomBorder" Property="Background" Value="{StaticResource ToggleButtonMouseOverBGColor}" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="CircleToggleButton"
        BasedOn="{StaticResource {x:Type ToggleButton}}"
        TargetType="{x:Type ToggleButton}">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Canvas Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Ellipse x:Name="BG" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Fill="{StaticResource ButtonColor}">
                        </Ellipse>
                        <Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </Canvas>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="BG" Property="Fill" Value="{StaticResource ToggleButtonCheckedBGColor}" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BG" Property="Fill" Value="{StaticResource ToggleButtonMouseOverBGColor}" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="ToolRadioButton"
        BasedOn="{StaticResource ToolToggleButton}"
        TargetType="{x:Type RadioButton}">
    </Style>

    <!--<Style
        x:Key="ColorRadioButton"
        BasedOn="{StaticResource {x:Type ToggleButton}}"
        TargetType="{x:Type RadioButton}">

        <Setter Property="Foreground" Value="White" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        Name="CustomBorder"
                        Padding="2"
                        Background="{StaticResource ButtonColor}"
                        BorderBrush="{StaticResource ButtonColor}"
                        BorderThickness="0"
                        CornerRadius="3">

                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="CustomBorder" Property="Background" Value="{StaticResource ToggleButtonMouseOverBGColor}" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CustomBorder" Property="Background" Value="{StaticResource ToggleButtonCheckedBGColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--<DataTemplate x:Key="ToggleRadioCheckedStyle">
        <Grid Background="{StaticResource ToggleButtonCheckedBGColor}">
            <ContentPresenter Content="{Binding}" TextBlock.TextAlignment="Center" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ToggleButtonMouseOverStyle">
        <Grid Background="{StaticResource ToggleButtonMouseOverBGColor}">
            <ContentPresenter Content="{Binding}" TextBlock.TextAlignment="Center" />
        </Grid>
    </DataTemplate>-->


    <!--<Style
        x:Key="ToggleRadio"
        BasedOn="{StaticResource {x:Type ToggleButton}}"
        TargetType="{x:Type RadioButton}">

        <Setter Property="BorderBrush" Value="{StaticResource BaseColor}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="{StaticResource ButtonColor}" />
        <Setter Property="Foreground" Value="{StaticResource TextColor}" />

        <Setter Property="FontSize" Value="12" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                <Setter Property="ContentTemplate" Value="{StaticResource ToggleButtonMouseOverStyle}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                <Setter Property="ContentTemplate" Value="{StaticResource ToggleRadioCheckedStyle}" />
            </Trigger>
        </Style.Triggers>
    </Style>-->


    <!--  Custom Toggle button  -->

    <!--<DataTemplate x:Key="CustomToggleCheckedStyle">
        <Grid Background="{StaticResource ToggleButtonCheckedBGColor}">
            <ContentPresenter Content="{Binding}" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="CustomToggleMouseOverStyle">
        <Grid Background="{StaticResource ToggleButtonMouseOverBGColor}">
            <ContentPresenter Content="{Binding}" />
        </Grid>
    </DataTemplate>-->


    <!--<Style
        x:Key="CustomRadioButton"
        BasedOn="{StaticResource {x:Type ToggleButton}}"
        TargetType="{x:Type RadioButton}">

        <Setter Property="BorderBrush" Value="{StaticResource BaseColor}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="{StaticResource ButtonColor}" />
        <Setter Property="Foreground" Value="{StaticResource TextColor}" />

        <Setter Property="FontSize" Value="12" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="ContentTemplate" Value="{StaticResource CustomToggleMouseOverStyle}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="ContentTemplate" Value="{StaticResource CustomToggleCheckedStyle}" />
            </Trigger>
        </Style.Triggers>
    </Style>-->

    <!--<Style
        x:Key="CustomToggleButton"
        BasedOn="{StaticResource {x:Type ToggleButton}}"
        TargetType="{x:Type ToggleButton}">

        <Setter Property="BorderBrush" Value="{StaticResource BaseColor}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="{StaticResource ButtonColor}" />
        <Setter Property="Foreground" Value="{StaticResource TextColor}" />

        <Setter Property="FontSize" Value="12" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="ContentTemplate" Value="{StaticResource CustomToggleMouseOverStyle}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="ContentTemplate" Value="{StaticResource CustomToggleCheckedStyle}" />
            </Trigger>
        </Style.Triggers>
    </Style>-->


    <!--  Custom toggle button 2  -->

    <!--<DataTemplate x:Key="CustomToggleCheckedStyle2">
        <Grid Background="#FF5064A0">
            <ContentPresenter Content="{Binding}" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="CustomToggleMouseOverStyle2">
        <Grid Background="{StaticResource ToggleButtonMouseOverBGColor}">
            <ContentPresenter Content="{Binding}" />
        </Grid>
    </DataTemplate>-->

    <!--<Style
        x:Key="CustomToggleButton2"
        BasedOn="{StaticResource {x:Type ToggleButton}}"
        TargetType="{x:Type ToggleButton}">

        <Setter Property="Padding" Value="0,0,0,0" />
        <Setter Property="BorderBrush" Value="{StaticResource ButtonColor}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="{StaticResource ButtonColor}" />
        <Setter Property="Foreground" Value="{StaticResource TextColor}" />

        <Setter Property="FontSize" Value="12" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="ContentTemplate" Value="{StaticResource CustomToggleMouseOverStyle2}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="ContentTemplate" Value="{StaticResource CustomToggleCheckedStyle2}" />
            </Trigger>
        </Style.Triggers>
    </Style>-->

    <!--<Style
        x:Key="ColorToggleButton"
        BasedOn="{StaticResource {x:Type ToggleButton}}"
        TargetType="{x:Type ToggleButton}">

        <Setter Property="Foreground" Value="White" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        Name="CustomBorder"
                        Background="{StaticResource ButtonColor}"
                        BorderBrush="{StaticResource ButtonColor}"
                        BorderThickness="0">

                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="CustomBorder" Property="Background" Value="{StaticResource ToggleButtonMouseOverBGColor}" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CustomBorder" Property="Background" Value="{StaticResource ToggleButtonCheckedBGColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--  Toggle button template  -->

    <!--<DataTemplate x:Key="MyToggleButtonCheckedStyle">
        <Grid Background="{StaticResource ToggleButtonCheckedBGColor}">
            <ContentPresenter
                Content="{Binding}"
                TextBlock.Foreground="{StaticResource TextColor}"
                TextBlock.TextAlignment="Center" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="MyToggleButtonMouseOverStyle">
        <Grid Background="{StaticResource ToggleButtonMouseOverBGColor}">
            <ContentPresenter
                Content="{Binding}"
                TextBlock.Foreground="{StaticResource TextColor}"
                TextBlock.TextAlignment="Center" />
        </Grid>
    </DataTemplate>

    <ControlTemplate x:Key="MyTggleButtonTemplate" TargetType="{x:Type ToggleButton}">
        <Border
            x:Name="MyBorder"
            Background="{StaticResource ButtonColor}"
            BorderBrush="{StaticResource BaseColor}"
            BorderThickness="1">
            <ContentPresenter TextBlock.Foreground="{StaticResource TextColor}" TextBlock.TextAlignment="Center" />

        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="ContentTemplate" Value="{StaticResource MyToggleButtonMouseOverStyle}" />
                <Setter TargetName="MyBorder" Property="Background" Value="{StaticResource ToggleButtonMouseOverBGColor}" />
            </Trigger>

            <Trigger Property="IsChecked" Value="True">
                <Setter Property="ContentTemplate" Value="{StaticResource MyToggleButtonCheckedStyle}" />
                <Setter TargetName="MyBorder" Property="Background" Value="{StaticResource ToggleButtonCheckedBGColor}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>-->

</ResourceDictionary>
